#!/bin/bash

profiles=(/etc/profile ~/.profile ~/.bash_profile ~/etc/xprofile ~/.xprofile)
xresources=(/etc/X11/Xresources ~/.Xresources)
xkeymaps=(/etc/X11/Xkbmap ~/.Xkbmap)
xmodmaps=(/etc/X11/Xmodmap ~/.Xmodmap)
xinitrc=(/etc/X11/xinit/xinitrc.d/* ~/.xinitrc.d/*)

info() {
	printf "Xsession: $*\n" >&2
}

main() {
	info "hello!"
	info "running as: $0 $*"

	if [[ $(basename "$1") == systemd ]]; then
		info "preparing for a systemd session"
		sysd=1
		e17=0
	elif [[ $(basename "$1") == enlightenment_start ]]; then
		info "preparing for e17 session"
		sysd=0
		e17=1
	else
		info "preparing for a 'legacy' session"
		sysd=0
		e17=0
	fi

	if (( sysd )); then
		source_profiles "${profiles[@]}"
		setup_dbus
	elif (( e17 )); then
		:
	else
		source_profiles "${profiles[@]}"
		load_xresources "${xresources[@]}"
		if ! load_xkeymaps "${xkeymaps[@]}"; then
			load_xmodmaps "${xmodmaps[@]}"
		else
			info "skipping Xmodmaps"
		fi
		source_xinitrc "${xinitrc[@]}"
	fi

	info "goodbye! starting session: $*"
	exec "$@"

	info "error running session, maybe you can have a terminal?"
	exec gnome-terminal

	info "we're fucked... -- goodbye!"
}

source_profiles() {
	info "sourcing profiles:"
	local file
	for file in "$@"; do
		if [[ -f "$file" ]]; then
			info "\t$file"
			source "$file"
		fi
	done
}

setup_dbus() {
	export DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/dbus/user_bus_socket
	info "exported DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS"
}

load_xresources() {
	info "loading Xresources:"
	local file
	for file in "$@"; do
		if [[ -f "$file" ]]; then
			info "\t$file"
			xrdb -nocpp -merge "$file"
		fi
	done
}

load_xkeymaps() {
	info "loading Xkeymaps:"
	local file noop=1
	for file in "$@"; do
		if [[ -f "$file" ]]; then
			info "\t$file"
			setxkbmap $(< "$file")
			noop=0
		fi
	done
	(( ! noop ))
}

load_xmodmaps() {
	info "loading Xmodmaps"
	local file
	for file in "$@"; do
		if [[ -f "$file" ]]; then
			info "\t$file"
			xmodmap "$file"
		fi
	done
}

source_xinitrc() {
	info "sourcing xinitrc.d:"
	local file
	for file in "$@"; do
		if [[ -f "$file" && -x "$file" ]]; then
			info "\t$file"
			source "$file"
		fi
	done
}

main "$@"
